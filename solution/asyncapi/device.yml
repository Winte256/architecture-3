asyncapi: '3.0.0'
info:
  title: Device Service API
  version: '1.0.0'
  description: AsyncAPI specification for the device service in the smart home system.
  contact:
    name: API Support
    url: http://www.smarthome.com/support
    email: support@smarthome.com

defaultContentType: application/json

servers:
  kafkaBroker:
    host: kafka:9092
    protocol: kafka
    description: Kafka broker for device service
    tags:
      - name: env:production
        description: Production environment
      - name: visibility:public
        description: This resource is available to all users

channels:
  deviceCreated:
    address: device/created
    description: Channel for publishing and subscribing to device creation events
    messages:
      deviceCreatedMessage:
        $ref: '#/components/messages/DeviceCreatedEvent'

  deviceUpdated:
    address: device/updated
    description: Channel for publishing and subscribing to device update events
    messages:
      deviceUpdatedMessage:
        $ref: '#/components/messages/DeviceUpdatedEvent'

  deviceDeleted:
    address: device/deleted
    description: Channel for publishing and subscribing to device deletion events
    messages:
      deviceDeletedMessage:
        $ref: '#/components/messages/DeviceDeletedEvent'

  deviceFirmware:
    address: device/firmware
    description: Channel for publishing and subscribing to device firmware update events
    messages:
      deviceFirmwareMessage:
        $ref: '#/components/messages/DeviceFirmwareEvent'

operations:
  publishDeviceCreated:
    action: send
    channel:
      $ref: '#/channels/deviceCreated'
    summary: Publish new device creation event
    messages:
      - $ref: '#/channels/deviceCreated/messages/deviceCreatedMessage'

  subscribeDeviceCreated:
    action: receive
    channel:
      $ref: '#/channels/deviceCreated'
    summary: Subscribe to new device creation events
    messages:
      - $ref: '#/channels/deviceCreated/messages/deviceCreatedMessage'

  publishDeviceUpdated:
    action: send
    channel:
      $ref: '#/channels/deviceUpdated'
    summary: Publish device update event
    messages:
      - $ref: '#/channels/deviceUpdated/messages/deviceUpdatedMessage'

  subscribeDeviceUpdated:
    action: receive
    channel:
      $ref: '#/channels/deviceUpdated'
    summary: Subscribe to device update events
    messages:
      - $ref: '#/channels/deviceUpdated/messages/deviceUpdatedMessage'

  publishDeviceDeleted:
    action: send
    channel:
      $ref: '#/channels/deviceDeleted'
    summary: Publish device deletion event
    messages:
      - $ref: '#/channels/deviceDeleted/messages/deviceDeletedMessage'

  subscribeDeviceDeleted:
    action: receive
    channel:
      $ref: '#/channels/deviceDeleted'
    summary: Subscribe to device deletion events
    messages:
      - $ref: '#/channels/deviceDeleted/messages/deviceDeletedMessage'

  publishDeviceFirmware:
    action: send
    channel:
      $ref: '#/channels/deviceFirmware'
    summary: Publish device firmware update event
    messages:
      - $ref: '#/channels/deviceFirmware/messages/deviceFirmwareMessage'

  subscribeDeviceFirmware:
    action: receive
    channel:
      $ref: '#/channels/deviceFirmware'
    summary: Subscribe to device firmware update events
    messages:
      - $ref: '#/channels/deviceFirmware/messages/deviceFirmwareMessage'

components:
  messages:
    DeviceCreatedEvent:
      name: DeviceCreatedEvent
      title: Device Created Event
      summary: Event triggered when a new device is created.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/DeviceCreatedEvent'

    DeviceUpdatedEvent:
      name: DeviceUpdatedEvent
      title: Device Updated Event
      summary: Event triggered when a device is updated.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/DeviceUpdatedEvent'

    DeviceDeletedEvent:
      name: DeviceDeletedEvent
      title: Device Deleted Event
      summary: Event triggered when a device is deleted.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/DeviceDeletedEvent'

    DeviceFirmwareEvent:
      name: DeviceFirmwareEvent
      title: Device Firmware Update Event
      summary: Event triggered when a device firmware is updated.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/DeviceFirmwareEvent'

  schemas:
    DeviceCreatedEvent:
      type: object
      properties:
        deviceId:
          type: string
          description: ID of the created device
        name:
          type: string
          description: Name of the created device
        type:
          type: string
          description: Type of the created device
        timestamp:
          type: string
          format: date-time
          description: Time when the device was created
        status:
          type: string
          pattern: '^(on|off)$'
          description: Status of the created device

    DeviceUpdatedEvent:
      type: object
      properties:
        deviceId:
          type: string
          description: ID of the updated device
        name:
          type: string
          description: Name of the updated device
        type:
          type: string
          description: Type of the updated device
        timestamp:
          type: string
          format: date-time
          description: Time when the device was updated
        status:
          type: string
          pattern: '^(on|off)$'
          description: Status of the updated device

    DeviceDeletedEvent:
      type: object
      properties:
        deviceId:
          type: string
          description: ID of the deleted device
        timestamp:
          type: string
          format: date-time
          description: Time when the device was deleted
    
    DeviceFirmwareEvent:
      type: object
      properties:
        deviceId:
          type: string
          description: ID of the device
        timestamp:
          type: string
          format: date-time
          description: Time when the firmware was updated
        version:
          type: string
          description: Version of the firmware
        status:
          type: string
          pattern: '^(success|failure)$'
          description: Status of the firmware update